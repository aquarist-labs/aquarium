@use '~@angular/material' as mat;

@import 'src/scss/defaults';
@import 'src/scss/bootstrap';

@include mat.core();

$glass-light-theme: mat.define-light-theme(
  mat.define-palette($eos-green-palette),
  mat.define-palette($eos-cerulean-palette),
  mat.define-palette($eos-red-palette)
);
$glass-light-theme-inverse: mat.define-light-theme(
  mat.define-palette($eos-cerulean-palette),
  mat.define-palette($eos-green-palette),
  mat.define-palette($eos-red-palette)
);

@include mat.all-component-themes($glass-light-theme);

$mat-typography-config: mat.define-typography-config();

.glass-color-theme-primary {
  color: $glass-color-theme-primary-complementary;
  background-color: $glass-color-theme-primary;
}
.glass-color-theme-accent {
  color: $glass-color-theme-accent-complementary;
  background-color: $glass-color-theme-accent;
}
.glass-color-theme-white {
  color: $glass-color-white;
  background-color: rgba(255, 255, 255, 0.1);
}
.glass-color-theme-error,
.glass-color-theme-danger {
  color: $glass-color-white;
  background-color: $glass-color-danger;
}
.glass-color-theme-ok {
  color: $glass-color-white;
  background-color: $glass-color-theme-primary;
}
.glass-color-theme-warn {
  color: $glass-color-black;
  background-color: $glass-color-warning;
}
.glass-color-theme-info {
  color: $glass-color-white;
  background-color: $glass-color-info;
}
.glass-color-theme-success {
  color: $glass-color-white;
  background-color: $glass-color-success;
}

.glass-background-color-primary {
  background-color: $glass-color-theme-primary;
}
.glass-background-color-accent {
  background-color: $glass-color-theme-accent;
}

.glass-color-primary {
  color: $glass-color-theme-primary;
}
.glass-color-accent {
  color: $glass-color-theme-accent;
}
.glass-color-green,
.glass-color-success {
  color: $glass-color-success;
}
.glass-color-red,
.glass-color-error {
  color: $glass-color-danger;
}

.glass-text-pre-wrap {
  white-space: pre-wrap;
}
.glass-text-pre {
  white-space: pre;
}
.glass-text-center {
  text-align: center;
}
.glass-text-bold {
  font-weight: bold;
}
.glass-text-monospaced {
  font-family: monospace !important;
}
.glass-text-no-decoration {
  text-decoration: none;
}

.glass-cursor-help {
  cursor: help;
}

.glass-icon-2x,
.glass-icon-3x,
.glass-icon-4x {
  line-height: 1;
}
.glass-icon-2x {
  font-size: 2em;
}
.glass-icon-3x {
  font-size: 3em;
}
.glass-icon-4x {
  font-size: 4em;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  background-color: $glass-color-body-background;
}

// BlockUI
.block-ui-wrapper {
  background: $glass-color-transparent-black !important;
}

// Sidenav
.mat-sidenav-container {
  height: 100%;
}
.mat-sidenav {
  background-color: $eos-bc-gray-50;
}

// ngx-charts
ngx-charts-advanced-pie-chart .advanced-pie-legend {
  .legend-items-container .legend-items {
    overflow: initial;
    .legend-item {
      .item-value {
        font-size: 16px;
      }
      .item-percent {
        font-size: 16px;
      }
      .item-label {
        font-size: 12px;
      }
    }
  }
  .total-label {
    font-size: 12px;
  }
  .total-value {
    font-size: 20px;
  }
}

// ngx-toastr
.toast-container {
  font-family: mat.font-family($mat-typography-config);
  font-size: mat.font-size($mat-typography-config, body-1);

  .ngx-toastr {
    box-shadow: unset;
    &:hover {
      box-shadow: unset;
    }
  }
}
.toast-error {
  background-color: $glass-color-danger;
}
.toast-success {
  background-color: $glass-color-success;
}
.toast-info {
  background-color: $glass-color-info;
}
.toast-warning {
  background-color: $glass-color-warning;
}
